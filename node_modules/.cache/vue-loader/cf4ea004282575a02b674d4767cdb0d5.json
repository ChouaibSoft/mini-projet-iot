{"remainingRequest":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/src/components/SignIn.vue?vue&type=style&index=0&id=fb473e1c&scoped=true&lang=css&","dependencies":[{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/src/components/SignIn.vue","mtime":1555237133952},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.lds-ellipsis {\n    display: inline-block;\n    position: relative;\n    width: 64px;\n    height: 64px;\n}\n.lds-ellipsis div {\n    position: absolute;\n    top: 27px;\n    width: 11px;\n    height: 11px;\n    border-radius: 50%;\n    background: #dfc;\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\n}\n.lds-ellipsis div:nth-child(1) {\n    left: 6px;\n    animation: lds-ellipsis1 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(2) {\n    left: 6px;\n    animation: lds-ellipsis2 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(3) {\n    left: 26px;\n    animation: lds-ellipsis2 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(4) {\n    left: 45px;\n    animation: lds-ellipsis3 0.6s infinite;\n}\n@keyframes lds-ellipsis1 {\n    0% {\n        transform: scale(0);\n    }\n    100% {\n        transform: scale(1);\n    }\n}\n@keyframes lds-ellipsis3 {\n    0% {\n        transform: scale(1);\n    }\n    100% {\n        transform: scale(0);\n    }\n}\n@keyframes lds-ellipsis2 {\n    0% {\n        transform: translate(0, 0);\n    }\n    100% {\n        transform: translate(19px, 0);\n    }\n}\n",{"version":3,"sources":["SignIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignIn.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"sign-in\" class=\"col s12\">\n        <form class=\"col s12\"  @submit.prevent=\"login\">\n            <div class=\"form-container\">\n                <h4>Bienvenue !</h4>\n                <generic-form>\n                    <div slot=\"form-fields\">\n                        <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                                <input\n                                        id=\"username\"\n                                        type=\"text\"\n                                        class=\"validate\"\n                                        required\n                                        v-model=\"username\">\n                                <label for=\"username\">Username</label>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                                <input id=\"password\" type=\"password\" class=\"validate\" required v-model=\"password\">\n                                <label for=\"password\">Password</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div slot=\"form-controls\">\n                        <center>\n                            <button class=\"btn waves-effect waves-light  submit\" type=\"submit\" name=\"action\">Sign in</button>\n                        </center>\n                    </div>\n                </generic-form>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n    import Form from \"@/components/Form\";\n    import { required } from 'vuelidate/lib/validators'\n    import { mapMutations, mapActions } from 'vuex';\n\n    export default {\n        name: \"SignIn\",\n        components: {\n            'generic-form': Form\n        },\n        data() {\n            return {\n                component: 'sign-in',\n                selected: 1,\n                username: '',\n                password: '',\n            }\n        },\n        methods: {\n            ...mapActions([\n                'switchProgress',\n                'postRequest'\n            ]),\n\n\n\n            login() {\n                var postData = {\n                    userName: this.username,\n                    password: this.password\n                };\n\n                var payload = {\n                    'data': postData,\n                    'link': '/login'\n                };\n                this.postRequest(payload).then(request => this.loginSuccessful(request))\n                    .catch( ()=> {\n                        this.flash('Login Failed !', 'error')\n                    })\n            },\n\n\n\n\n            loginSuccessful(req) {\n                if (req.headers) {\n\n                    //localStorage.token = req.headers.authorization;\n                    this.$store.dispatch('saveUserToken', req.headers.authorization);\n                    this.$http.get( 'http://localhost:8091/id',{\n                            headers:{\n                                'Content-Type': 'application/json',\n                                'Authorization': 'Bearer '+ this.$store.state.token\n                            }\n                        }\n\n                    ).then(request=>this.$store.dispatch('saveUserId', request.data))\n                    this.switchProgress();\n                    setTimeout(() => {\n                        this.switchProgress();\n                        this.$router.push('/dashboard');\n                    },2000);\n                    return false;\n\n                }\n                else {\n                    this.error = 'Login Failed'\n                }\n\n            },\n        },\n        validations: {\n            username: {\n                required,\n            },\n            password: {\n                required,\n            }\n        },\n    }\n</script>\n\n<style scoped>\n    .lds-ellipsis {\n        display: inline-block;\n        position: relative;\n        width: 64px;\n        height: 64px;\n    }\n    .lds-ellipsis div {\n        position: absolute;\n        top: 27px;\n        width: 11px;\n        height: 11px;\n        border-radius: 50%;\n        background: #dfc;\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\n    }\n    .lds-ellipsis div:nth-child(1) {\n        left: 6px;\n        animation: lds-ellipsis1 0.6s infinite;\n    }\n    .lds-ellipsis div:nth-child(2) {\n        left: 6px;\n        animation: lds-ellipsis2 0.6s infinite;\n    }\n    .lds-ellipsis div:nth-child(3) {\n        left: 26px;\n        animation: lds-ellipsis2 0.6s infinite;\n    }\n    .lds-ellipsis div:nth-child(4) {\n        left: 45px;\n        animation: lds-ellipsis3 0.6s infinite;\n    }\n    @keyframes lds-ellipsis1 {\n        0% {\n            transform: scale(0);\n        }\n        100% {\n            transform: scale(1);\n        }\n    }\n    @keyframes lds-ellipsis3 {\n        0% {\n            transform: scale(1);\n        }\n        100% {\n            transform: scale(0);\n        }\n    }\n    @keyframes lds-ellipsis2 {\n        0% {\n            transform: translate(0, 0);\n        }\n        100% {\n            transform: translate(19px, 0);\n        }\n    }\n</style>\n"]}]}