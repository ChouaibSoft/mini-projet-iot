{"remainingRequest":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/src/views/AddReact.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/src/views/AddReact.vue","mtime":1562083499135},{"path":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapState, mapActions, mapGetters} from 'vuex';\nimport { required, minLength } from 'vuelidate/lib/validators'\nimport Form from \"@/components/Form\";\nimport 'vue-tel-input/dist/vue-tel-input.css';\nimport VueTelInput from 'vue-tel-input';\n\nexport default {\n    name: \"new-react\",\n    components: {\n        'generic-form': Form,\n        VueTelInput,\n    },\n    data (){\n        return{\n            name: '',\n            channelFields : null,\n            channelID: '',\n            fieldID:'',\n            condition:'',\n            provider:'',\n            phone: '',\n            value:'',\n            message:'',\n            id: '',\n            iduser:'',\n            canals:'',\n            trigeID:'',\n            commande:'',\n            email_react:'',\n            message_email:''\n\n        }\n    },\n    computed:{\n        ...mapState['userId'],\n        ...mapGetters(['getCanals','getFields', 'getUserId', 'getToken', 'getAPIUrl','getTriggers'])\n\n    },\n    created() {\n        var payload = {\n            'link': '/canal-service/canals/'+ this.getUserId,\n            'mutation': 'setCanals',\n            'all': false\n        };\n        this.$store.dispatch('getRequest', payload);\n\n        let payloadB={\n            'link': '/trigger-service/userTriger/' + this.getUserId ,\n            'mutation': 'setTriggers',\n            'all': false\n        };\n        this.$store.dispatch('getRequest',payloadB)\n\n\n\n    },\n    methods: {\n        ...mapActions(['postRequest']),\n        addReact: function () {\n            let postData = {\n                nom: this.name,\n                condition:this.condition,\n                valeur:this.value,\n                CanalId:this.channelID,\n                fieldId:this.fieldID,\n                message:this.message,\n                tel:this.phone,\n                commande:this.commande,\n                email_react:this.email_react,\n                message_email:this.message_email,\n                trigerId:this.trigeID\n                ,\n                userId: this.$store.state.userId\n\n            };\n\n            let payload = {\n                'data': postData,\n                'link': '/trigger-service/react'};\n            this.postRequest(payload).then(() => {\n                this.flash(this.$t('react.add-success'), 'success');\n                this.$router.push('/dashboard/reacts');\n                // this.twilio();\n            }).catch(() => {\n                this.flash(this.$t('react.add-error'), 'error');\n            })\n        },\n        getChannelFields(e){\n            // e => Get Selected Channel Id\n            if(e.target.options.selectedIndex > -1) {\n                let canalId = e.target.options[e.target.options.selectedIndex].value;\n                this.$http.get(this.getAPIUrl + '/canal-service/canals/' + canalId + '/fields' , {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + this.getToken\n                    }\n                }).then(request => {\n                    this.channelFields = request.data.content;\n                }).catch(error => {\n\n                })\n            }\n        },\n\n\n    },\n    mounted(){\n        $('textarea#description').characterCounter();\n        $('select').formSelect();\n    },\n    validations: {\n        name: {\n            required,\n            minLength: minLength(3)\n        },\n        value: {\n            required,\n        }\n    },\n}\n",{"version":3,"sources":["AddReact.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8NA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddReact.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div id=\"content\">\n        <div class=\"row page-title-path\">\n            <div class=\"col\">\n                <h2>{{ $t('main-title') }}</h2>\n            </div>\n            <div class=\"col right\">\n                <p>Home > <span> Ajouter React</span></p>\n            </div>\n\n        </div>\n        <section class=\"component-section\">\n            <div class=\"row\">\n                <div class=\"col s12 l5\">\n                    <form class=\"form\" id=\"add-canal\" @submit.prevent=\"addReact\">\n                        <generic-form>\n                            <div slot=\"form-fields\">\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <input\n                                                id=\"name\"\n                                                type=\"text\"\n                                                required\n                                                minlength=\"3\"\n                                                class=\"validate\"\n                                                v-model=\"name\"\n                                                @input=\"$v.name.$touch()\">\n                                        <label for=\"name\">{{ $t('react.name') }}</label>\n                                        <div v-if=\"$v.name.$dirty\">\n                                            <p class=\"error-message red-text \" v-if=\"!$v.name.required\">\n                                                {{ $t('errors.required') }}\n                                            </p>\n                                            <p class=\"error-message red-text \" v-if=\"!$v.name.minLength\">\n                                                {{ $t('errors.min-length', {minLength: 3}) }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"input-field  col s12\">\n                                        <select  @change=\"getChannelFields\" v-model=\"channelID\">\n                                            <option value=\"\" disabled selected>{{$t('react.channel-select')}}</option>\n                                            <option  v-for=\"canal in getCanals\" :value=\"canal.id\">{{ canal.nom }}</option>\n                                        </select>\n                                        <label>{{$t('react.channel')}}</label>\n                                    </div>\n                                </div>\n\n\n                                <div class=\"row\">\n                                    <p v-for=\"field in this.channelFields\" class=\"col\">\n                                        <label>\n                                            <input :value=\"field.id\" name=\"group1\" v-model=\"fieldID\" type=\"radio\" class=\"with-gap\" />\n                                            <span>{{ field.nom }}</span>\n                                        </label>\n                                    </p>\n                                </div>\n\n                                <div class=\"row\">\n                                    <div class=\"input-field  col s12\">\n                                        <select v-model=\"condition\">\n                                            <option value=\"\" disabled selected>{{$t('react.condition-select')}}</option>\n                                            <option >{{$t('react.is-greater-than')}}</option>\n                                            <option >{{$t('react.is-less-than')}}</option>\n                                            <option >{{$t('react.is-equal-to')}}</option>\n                                        </select>\n                                        <label>{{$t('react.condition')}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <input\n                                                id=\"value\"\n                                                type=\"number\"\n                                                required\n                                                class=\"validate\"\n                                                v-model.number=\"value\"\n                                                @input=\"$v.value.$touch()\">\n                                        <label for=\"value\">{{ $t('react.value') }}</label>\n                                        <div v-if=\"$v.value.$dirty\">\n                                            <p class=\"error-message red-text \" v-if=\"!$v.value.required\">\n                                                {{ $t('errors.required') }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"input-field  col s12\">\n                                        <select v-model=\"provider\">\n                                            <option value=\"\" disabled selected>Choose a provider</option>\n                                            <option value=\"twilio\">ESI-IOT TWILIO</option>\n                                            <option value=\"http\">ESI-IOT HTTP</option>\n                                            <option value=\"email\">ESI-IOT EMAIL</option>\n                                        </select>\n                                        <label>{{$t('react.provider')}}</label>\n                                    </div>\n                                </div>\n\n\n\n\n                                <div v-if=\"provider==='twilio'\">\n                                    <div class=\"row\">\n                                        <div class=\"input-field col s12\">\n                                            <input\n                                                    id=\"message\"\n                                                    type=\"text\"\n                                                    v-model=\"message\">\n                                            <label for=\"message\">{{ $t('react.message') }}</label>\n\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"row\" style=\"margin-bottom: 30px\">\n                                        <vue-tel-input v-model=\"phone\" enabledCountryCode\n                                                       :preferredCountries=\"['dz']\"\n                                        ></vue-tel-input>\n                                    </div>\n\n                                </div>\n\n                                <div v-if=\"provider==='http'\">\n\n                                    <div class=\"row\">\n                                        <div class=\"input-field col s12\">\n\n                                            <p v-for=\"triger in getTriggers\" v-bind:key=\"triger\">\n                                                <label>\n                                                    <input :value=\"triger.id\" name=\"group2\" v-model=\"trigeID\" type=\"radio\" class=\"with-gap\" />\n\n                                                    <span>{{triger.nom}}</span>\n                                                </label>\n                                            </p>\n\n                                            <input id=\"cmd\"\n                                                   type=\"text\"\n                                                   class=\"validate\"\n                                                   minlength=\"3\"\n                                                   v-model=\"commande\"\n                                                   placeholder=\"Commande\"\n                                            >\n\n                                        </div>\n                                    </div>\n\n\n                                </div>\n\n\n\n                                <div v-if=\"provider==='email'\">\n                                    <div class=\"row\">\n                                        <div class=\"input-field col s12\">\n\n                                            <input\n                                                    id=\"message_email\"\n                                                    type=\"text\"\n                                                    v-model=\"message_email\">\n                                            <label for=\"message_email\">{{ $t('react.email') }}</label>\n\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"row\">\n                                        <div class=\"input-field col s12\">\n\n\n                                            <input\n                                                    id=\"email\"\n                                                    type=\"text\"\n                                                    v-model=\"email_react\">\n                                            <label for=\"message\">{{ $t('react.message') }}</label>\n\n                                        </div>\n                                    </div>\n\n                                </div>\n\n\n                            </div>\n                            <div slot=\"form-controls\">\n                                <div>\n                                    <div class=\"row\">\n                                        <div class=\"col right\">\n                                            <button type=\"submit\" class=\"button waves-effect waves-light btn\">\n                                                {{ $t('react.add') }}\n                                                <i class=\"material-icons right\">send</i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </generic-form>\n                    </form>\n                </div>\n                <div class=\"col l7 s12\">\n                    <h4>{{ $t('help') }}</h4>\n                    <h5>{{ $t('react-settings') }}</h5>\n                    <ul class=\"help-list\">\n                        <li>\n                            <p><strong>{{ $t('settings.name') }}</strong>{{ $t('settings.name-det') }}</p>\n                        </li>\n                        <li>\n                            <p v-html=\"this.$t('settings.condition-type')\"></p>\n                        </li>\n                        <li>\n                            <p v-html=\"this.$t('settings.test-frequency')\"></p>\n                        </li>\n                        <li>\n                            <p v-html=\"this.$t('settings.condition')\"></p>\n                        </li>\n                    </ul>\n\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script>\n    import {mapState, mapActions, mapGetters} from 'vuex';\n    import { required, minLength } from 'vuelidate/lib/validators'\n    import Form from \"@/components/Form\";\n    import 'vue-tel-input/dist/vue-tel-input.css';\n    import VueTelInput from 'vue-tel-input';\n\n    export default {\n        name: \"new-react\",\n        components: {\n            'generic-form': Form,\n            VueTelInput,\n        },\n        data (){\n            return{\n                name: '',\n                channelFields : null,\n                channelID: '',\n                fieldID:'',\n                condition:'',\n                provider:'',\n                phone: '',\n                value:'',\n                message:'',\n                id: '',\n                iduser:'',\n                canals:'',\n                trigeID:'',\n                commande:'',\n                email_react:'',\n                message_email:''\n\n            }\n        },\n        computed:{\n            ...mapState['userId'],\n            ...mapGetters(['getCanals','getFields', 'getUserId', 'getToken', 'getAPIUrl','getTriggers'])\n\n        },\n        created() {\n            var payload = {\n                'link': '/canal-service/canals/'+ this.getUserId,\n                'mutation': 'setCanals',\n                'all': false\n            };\n            this.$store.dispatch('getRequest', payload);\n\n            let payloadB={\n                'link': '/trigger-service/userTriger/' + this.getUserId ,\n                'mutation': 'setTriggers',\n                'all': false\n            };\n            this.$store.dispatch('getRequest',payloadB)\n\n\n\n        },\n        methods: {\n            ...mapActions(['postRequest']),\n            addReact: function () {\n                let postData = {\n                    nom: this.name,\n                    condition:this.condition,\n                    valeur:this.value,\n                    CanalId:this.channelID,\n                    fieldId:this.fieldID,\n                    message:this.message,\n                    tel:this.phone,\n                    commande:this.commande,\n                    email_react:this.email_react,\n                    message_email:this.message_email,\n                    trigerId:this.trigeID\n                    ,\n                    userId: this.$store.state.userId\n\n                };\n\n                let payload = {\n                    'data': postData,\n                    'link': '/trigger-service/react'};\n                this.postRequest(payload).then(() => {\n                    this.flash(this.$t('react.add-success'), 'success');\n                    this.$router.push('/dashboard/reacts');\n                    // this.twilio();\n                }).catch(() => {\n                    this.flash(this.$t('react.add-error'), 'error');\n                })\n            },\n            getChannelFields(e){\n                // e => Get Selected Channel Id\n                if(e.target.options.selectedIndex > -1) {\n                    let canalId = e.target.options[e.target.options.selectedIndex].value;\n                    this.$http.get(this.getAPIUrl + '/canal-service/canals/' + canalId + '/fields' , {\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': 'Bearer ' + this.getToken\n                        }\n                    }).then(request => {\n                        this.channelFields = request.data.content;\n                    }).catch(error => {\n\n                    })\n                }\n            },\n\n\n        },\n        mounted(){\n            $('textarea#description').characterCounter();\n            $('select').formSelect();\n        },\n        validations: {\n            name: {\n                required,\n                minLength: minLength(3)\n            },\n            value: {\n                required,\n            }\n        },\n    }\n</script>\n\n<style scoped lang=\"scss\">\n\n\n</style>\n<i18n>\n    {\n    \"en\": {\n    \"main-title\": \"New React\",\n    \"no-channel\": \"No Channel to displayed\",\n    \"add-channel\": \"New Channel\",\n    \"help\": \"Help\",\n    \"react-settings\": \"React Settings\",\n    \"settings\": {\n    \"name\": \"React Name : \",\n    \"name-det\": \"Enter a unique name for your React.\",\n    \"condition-type\":  \"<strong>Condition Type : </strong> Select a condition type corresponding with your data. A channel can hold numeric sensor data, text, strings, status updates, or geographic location information.\",\n    \"test-frequency\":  \"<strong>Test Frequency : </strong> Choose whether to test your condition every time data enters the channel or on a periodic basis.\",\n    \"condition\":  \"<strong>Condition : </strong> Select a channel, a field and the condition for your React.\"\n    }\n    },\n    \"fr\": {\n    \"main-title\": \"Nouveau React\",\n    \"no-channel\": \"Aucun Canal à Afficher\",\n    \"add-react\": \"Nouveau React\",\n    \"help\": \"Aide\",\n    \"react-settings\": \"Paramètres de  React\",\n    \"settings\": {\n    \"name\": \"Nom de  React : \",\n    \"name-det\": \" Entrez un nom unique pour votre React.\",\n    \"condition-type\":  \"<strong> Type de condition: </ strong> sélectionnez un type de condition correspondant à vos données. Un canal peut contenir des données de capteur numérique, du texte, des chaînes, des mises à jour de statut ou des informations de localisation géographique.\",\n    \"test-frequency\":  \"<strong> Fréquence de test: </ strong> choisissez de tester votre condition à chaque fois que des données entrent dans le canal ou de manière périodique..\",\n    \"condition\":  \"<strong> Condition </strong>: sélectionnez un canal, un champ et la condition de votre réaction.\"\n    }\n    }\n    }\n</i18n>\n"]}]}