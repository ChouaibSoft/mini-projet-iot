{"remainingRequest":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/src/views/AddChannel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/src/views/AddChannel.vue","mtime":1577101267706},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions,mapGetters } from 'vuex';\nimport { required, minLength } from 'vuelidate/lib/validators'\nimport Form from \"@/components/Form\";\n\nexport default {\n    name: \"add-channel\",\n    components: {\n        'generic-form': Form\n    },\n    data (){\n        return{\n            name: '',\n            description: '',\n            id: '',\n            iduser:'',\n            look : false\n        }\n    },\n    computed:{\n        ...mapGetters(['getUserId'])\n\n    },\n    methods: {\n        ...mapActions(['postRequest']),\n\n        addCanal: function () {\n            this.look = true;\n            let postData = {\n                nom: this.name,\n                description: this.description,\n                userId: this.getUserId\n            };\n\n            let payload = {\n                'data': postData,\n                'link': '/aquisition-service/add-field'};\n            this.postRequest(payload).then(() => {\n                this.flash(this.$t('canal.add-success'), 'success');\n                this.$router.push('/dashboard/channels');\n                this.look = false;\n            }).catch(() => {\n                this.flash(this.$t('canal.add-error'), 'error');\n                this.look = false;\n            })\n        }\n    },\n    mounted(){\n        $('textarea#description').characterCounter();\n\n    },\n    validations: {\n        name: {\n            required,\n            minLength: minLength(3)\n        },\n        description: {\n            required,\n            minLength: minLength(5),\n        },\n        fields: {\n            minLength: minLength(3)\n        }\n    },\n}\n",{"version":3,"sources":["AddChannel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddChannel.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div id=\"content\">\n        <div class=\"row page-title-path\">\n            <div class=\"col\">\n                <h2>{{ $t('main-title') }}</h2>\n            </div>\n            <div class=\"col right\">\n                <p>Home > <span> Ajouter Field</span></p>\n            </div>\n\n        </div>\n        <section class=\"component-section\">\n            <div class=\"row\">\n                <div class=\"col s12 l5\">\n                    <form class=\"form\" id=\"add-canal\" @submit.prevent=\"addCanal\">\n                        <generic-form>\n                            <div slot=\"form-fields\">\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <input\n                                                id=\"name\"\n                                                type=\"text\"\n                                                required\n                                                minlength=\"3\"\n                                                class=\"validate\"\n                                                v-model=\"name\"\n                                                @input=\"$v.name.$touch()\">\n                                        <label for=\"name\">{{ $t('canal.name') }}</label>\n                                        <div v-if=\"$v.name.$dirty\">\n                                            <p class=\"error-message red-text \" v-if=\"!$v.name.required\">\n                                                {{ $t('errors.required') }}\n                                            </p>\n                                            <p class=\"error-message red-text \" v-if=\"!$v.name.minLength\">\n                                                {{ $t('errors.min-length', {minLength: 3}) }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <textarea\n                                                id=\"description\"\n                                                data-length=\"120\"\n                                                class=\"materialize-textarea validate\"\n                                                required\n                                                minlength=\"5\"\n                                                v-model=\"description\"\n                                                @input=\"$v.description.$touch()\">\n                                        </textarea>\n                                        <label for=\"description\">{{ $t('canal.description') }}</label>\n                                        <div v-if=\"$v.description.$dirty\">\n                                            <p class=\"error-message red-text \" v-if=\"!$v.description.required\">\n                                                {{ $t('errors.required') }}\n                                            </p>\n                                            <p class=\"error-message red-text \" v-if=\"!$v.description.minLength\">\n                                                {{ $t('errors.min-length', {minLength: 5}) }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div slot=\"form-controls\">\n                                <div>\n                                    <div class=\"row\">\n                                        <div class=\"col right\">\n                                            <button :disabled=\"this.look === true\" type=\"submit\" class=\"button waves-effect waves-light btn\">\n                                                {{ $t('canal.add') }}\n                                                <i class=\"material-icons right\">send</i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </generic-form>\n                    </form>\n                </div>\n                <div class=\"col l7 s12\">\n                    <div class=\"help\">\n                        <h4>{{ $t('help') }}</h4>\n                        <h5>{{ $t('channel-settings') }}</h5>\n                        <ul class=\"help-list\">\n                            <li>\n                                <p><strong>{{ $t('settings.name') }}</strong>{{ $t('settings.name-det') }}</p>\n                            </li>\n                            <li>\n                                <p><strong>{{ $t('settings.description') }}</strong>{{ $t('settings.description-det') }}</p>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script>\n    import { mapState, mapActions,mapGetters } from 'vuex';\n    import { required, minLength } from 'vuelidate/lib/validators'\n    import Form from \"@/components/Form\";\n\n    export default {\n        name: \"add-channel\",\n        components: {\n            'generic-form': Form\n        },\n        data (){\n            return{\n                name: '',\n                description: '',\n                id: '',\n                iduser:'',\n                look : false\n            }\n        },\n        computed:{\n            ...mapGetters(['getUserId'])\n\n        },\n        methods: {\n            ...mapActions(['postRequest']),\n\n            addCanal: function () {\n                this.look = true;\n                let postData = {\n                    nom: this.name,\n                    description: this.description,\n                    userId: this.getUserId\n                };\n\n                let payload = {\n                    'data': postData,\n                    'link': '/aquisition-service/add-field'};\n                this.postRequest(payload).then(() => {\n                    this.flash(this.$t('canal.add-success'), 'success');\n                    this.$router.push('/dashboard/channels');\n                    this.look = false;\n                }).catch(() => {\n                    this.flash(this.$t('canal.add-error'), 'error');\n                    this.look = false;\n                })\n            }\n        },\n        mounted(){\n            $('textarea#description').characterCounter();\n\n        },\n        validations: {\n            name: {\n                required,\n                minLength: minLength(3)\n            },\n            description: {\n                required,\n                minLength: minLength(5),\n            },\n            fields: {\n                minLength: minLength(3)\n            }\n        },\n    }\n</script>\n\n<style scoped lang=\"scss\">\n\n\n</style>\n<i18n>\n    {\n    \"en\": {\n    \"main-title\": \"New Field\",\n    \"channel\": \"Field\",\n    \"channel-des\": \"Channels store all the data that a Iot-Platform ESI-SBA application collects. Each channel includes eight fields that can hold any type of data, plus three fields for location data and one for status data. Once you collect data in a channel, you can use ThingSpeak apps to analyze and visualize it.\",\n    \"channel-settings\": \"Channel Settings\",\n    \"settings\": {\n    \"name\": \"Field Name : \",\n    \"name-det\": \"Enter a unique name for the Iot Agriculture field.\",\n    \"description\": \"Description : \",\n    \"description-det\": \"Enter a description of the IoT Agriculture  filed.\"\n    }\n    },\n    \"fr\": {\n    \"main-title\": \"Nouveau Field\",\n    \"channel\": \"Field\",\n    \"channel-des\": \"Les canaux stockent toutes les données collectées par une application Iot-Platform ESI-SBA. Chaque canal comprend huit champs pouvant contenir tout type de données, ainsi que trois champs pour les données de localisation et un pour les données d'état. , vous pouvez utiliser les applications ThingSpeak pour l’analyser et le visualiser. \",\n    \"channel-settings\": \"Paramètres de Field\",\n    \"settings\": {\n    \"name\": \"Nom du Field : \",\n    \"name-det\": \"Enter a unique name for the Iot Agriculture field.\",\n    \"description\": \"Description : \",\n    \"description-det\": \"Entrez une description pour le Field Iot Agriculte\"\n    }\n    }\n    }\n</i18n>\n"]}]}