{"remainingRequest":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/src/components/SignIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/src/components/SignIn.vue","mtime":1562083368072},{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Form from \"@/components/Form\";\nimport { required } from 'vuelidate/lib/validators'\nimport {  mapActions, mapGetters } from 'vuex';\n\nexport default {\n    name: \"SignIn\",\n    components: {\n        'generic-form': Form\n    },\n    data() {\n        return {\n            component: 'sign-in',\n            selected: 1,\n            email: '',\n            password: '',\n            forgetPassword: false\n        }\n    },\n    computed: {\n        ...mapGetters(['getApiUrl'])\n    },\n    methods: {\n        ...mapActions([\n            'switchProgress',\n            'postRequest'\n        ]),\n        login() {\n            var postData = {\n                email: this.email,\n                password: this.password\n            };\n            var payload = {\n                'data': postData,\n                'link': '/authentification-service/login'\n            };\n            this.postRequest(payload).then(request => this.loginSuccessful(request))\n                .catch( ()=> {\n                    this.flash(this.$t('auth.login-failed'), 'error')\n                })\n        },\n        loginSuccessful(req) {\n            if (req.headers) {\n                this.$store.dispatch('saveUserToken', req.headers.authorization);\n                this.$http.get( this.getApiUrl +  '/authentification-service/id',{\n                        headers:{\n                            'Content-Type': 'application/json',\n                            'Authorization': 'Bearer '+ this.$store.state.token\n                        }\n                    }\n                ).then(request=>{this.$store.dispatch('saveUserId', request.data)\n                    console.log(request.data)\n                })\n                this.switchProgress()\n\n\n                setTimeout(() => {\n                    this.switchProgress();\n                    this.$router.push('/dashboard');\n                },2000);\n                return false;\n            }\n        },\n    },\n    validations: {\n        email: {\n            required,\n        },\n        password: {\n            required,\n        }\n    },\n}\n",{"version":3,"sources":["SignIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignIn.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"sign-in\" class=\"col s12\">\n        <form v-if=\"!forgetPassword\" class=\"col s12 form\"  @submit.prevent=\"login\">\n            <div class=\"form-container\">\n                <h4>{{ $t('auth.welcome') }}</h4>\n                <generic-form>\n                    <div slot=\"form-fields\">\n                        <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                                <i class=\"material-icons prefix\">account_circle</i>\n                                <input\n                                        id=\"email\"\n                                        type=\"text\"\n                                        class=\"validate\"\n                                        required\n                                        v-model=\"email\"\n                                        @input=\"$v.email.$touch()\">\n                                <label for=\"email\">{{ $t('auth.email') }}</label>\n                                <div v-if=\"$v.email.$dirty\">\n                                    <p class=\"error-message red-text \" v-if=\"!$v.email.required\">\n                                        {{ $t('errors.required') }}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                                <i class=\"material-icons prefix\">lock</i>\n                                <input\n                                        id=\"password\"\n                                        type=\"password\"\n                                        class=\"validate\"\n                                        required\n                                        v-model=\"password\"\n                                        @input=\"$v.password.$touch()\">\n                                <label for=\"password\">{{ $t('auth.password') }}</label>\n                                <div v-if=\"$v.password.$dirty\">\n                                    <p class=\"error-message red-text \" v-if=\"!$v.password.required\">\n                                        {{ $t('errors.required') }}\n                                    </p>\n                                </div>\n                                <a href=\"#\" class=\"forget-password\" @click=\"forgetPassword = !forgetPassword\">{{ $t('auth.forgot-password') }}</a>\n                            </div>\n                        </div>\n                    </div>\n                    <div slot=\"form-controls\">\n                        <center>\n                            <button class=\"btn waves-effect waves-light  submit\" type=\"submit\" name=\"action\">{{ $t('auth.sign-in') }}</button>\n                        </center>\n                    </div>\n                </generic-form>\n            </div>\n        </form>\n        <form v-else class=\"col s12\"  @submit.prevent=\"forgetPassword\">\n            <div class=\"form-container form\">\n                <h5>{{ $t('auth.forgot-password') }}</h5>\n                <generic-form>\n                    <div slot=\"form-fields\">\n                        <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                                <i class=\"material-icons prefix\">email</i>\n                                <input\n                                        id=\"email-2\"\n                                        type=\"text\"\n                                        class=\"validate\"\n                                        required\n                                        v-model=\"email\"\n                                        @input=\"$v.email.$touch()\">\n                                <label for=\"email-2\">{{ $t('auth.email') }}</label>\n                                <div v-if=\"$v.email.$dirty\">\n                                    <p class=\"error-message red-text \" v-if=\"!$v.email.required\">\n                                        {{ $t('errors.required') }}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>o\n                    <div slot=\"form-controls\">\n                        <center>\n                            <a @click=\"forgetPassword= !forgetPassword\" class=\"btn waves-effect waves-light\" name=\"action\">{{ $t('auth.cancel') }}</a>\n                            <a style=\"margin-left: 50px\" class=\"btn waves-effect waves-light  submit\" type=\"submit\" name=\"action\">{{ $t('auth.submit') }}</a>\n                        </center>\n                    </div>\n                </generic-form>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n    import Form from \"@/components/Form\";\n    import { required } from 'vuelidate/lib/validators'\n    import {  mapActions, mapGetters } from 'vuex';\n\n    export default {\n        name: \"SignIn\",\n        components: {\n            'generic-form': Form\n        },\n        data() {\n            return {\n                component: 'sign-in',\n                selected: 1,\n                email: '',\n                password: '',\n                forgetPassword: false\n            }\n        },\n        computed: {\n            ...mapGetters(['getApiUrl'])\n        },\n        methods: {\n            ...mapActions([\n                'switchProgress',\n                'postRequest'\n            ]),\n            login() {\n                var postData = {\n                    email: this.email,\n                    password: this.password\n                };\n                var payload = {\n                    'data': postData,\n                    'link': '/authentification-service/login'\n                };\n                this.postRequest(payload).then(request => this.loginSuccessful(request))\n                    .catch( ()=> {\n                        this.flash(this.$t('auth.login-failed'), 'error')\n                    })\n            },\n            loginSuccessful(req) {\n                if (req.headers) {\n                    this.$store.dispatch('saveUserToken', req.headers.authorization);\n                    this.$http.get( this.getApiUrl +  '/authentification-service/id',{\n                            headers:{\n                                'Content-Type': 'application/json',\n                                'Authorization': 'Bearer '+ this.$store.state.token\n                            }\n                        }\n                    ).then(request=>{this.$store.dispatch('saveUserId', request.data)\n                        console.log(request.data)\n                    })\n                    this.switchProgress()\n\n\n                    setTimeout(() => {\n                        this.switchProgress();\n                        this.$router.push('/dashboard');\n                    },2000);\n                    return false;\n                }\n            },\n        },\n        validations: {\n            email: {\n                required,\n            },\n            password: {\n                required,\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}