{"remainingRequest":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/src/views/MyChannels.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/src/views/MyChannels.vue","mtime":1562083592214},{"path":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/Front/iot-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex'\nexport default {\n    name: \"my-channels\",\n    data(){\n        return{\n            CreatedDate: '',\n            page: 1,\n            perPage: 3,\n            pages: [],\n        }\n    },\n    computed: {\n        ...mapGetters(['getCanals', 'getUserId']),\n        displayChannels () {\n            return this.paginate(this.getCanals);\n        }\n    },\n    methods:{\n        ...mapActions(['deleteRequest']),\n        getDateCreated(data){\n            return data.substring(0,10);\n        },\n        deleteChannel:function (canalID, index) {\n            var confirmR = confirm(this.$t('canal.delete-msg'));\n            if (confirmR){\n                var payload={\n                    'link':'/canal-service/canals/'+ canalID,\n                    'mutation':'setCanals',\n                };\n                this.deleteRequest(payload).then(() => {\n                    this.getCanals.splice(index, 1);\n                    if(this.getCanals.length === 0){\n                        this.$store.state.canals = null;\n                    }\n                    this.flash(this.$t('canal.delete-success'), 'success');\n                }).catch(() => {\n                    this.flash(this.$t('canal.delete-error'), 'error');\n                })\n            }\n        },\n        setPages () {\n            this.pages = [];\n            let numberOfPages = Math.ceil(this.getCanals.length / this.perPage);\n            for (let index = 1; index <= numberOfPages; index++) {\n                this.pages.push(index);\n            }\n        },\n        paginate (channels) {\n            let page = this.page;\n            let perPage = this.perPage;\n            let from = (page * perPage) - perPage;\n            let to = (page * perPage);\n            return  channels.slice(from, to);\n        }\n    },\n    watch: {\n        getCanals() {\n            this.setPages();\n        }\n    },\n    created() {\n        console.log(this.getUserId)\n        var payload = {\n            'link': '/canal-service/canals/'+ this.getUserId,\n            'mutation': 'setCanals',\n            'all': false\n        };\n        this.$store.dispatch('getRequest', payload);\n    },\n    mounted(){\n        $(\"tr\").find(\"td\").click(function(){\n            if (!($(this).hasClass(\"not-allowed\"))){\n                window.location = $(this).parent(\"tr\").data('url');\n            }\n        });\n    }\n}\n",{"version":3,"sources":["MyChannels.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyChannels.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div id=\"content\">\n        <div class=\"row page-title-path\">\n            <div class=\"col\">\n                <h2>{{ $t('main-title') }}</h2>\n            </div>\n            <div class=\"col right\">\n                <p>Home > <span></span></p>\n            </div>\n        </div>\n        <section class=\"component-section\">\n            <div v-if=\"!(this.getCanals === null) \" class=\"row\">\n                <div class=\"col s12 l8\">\n                    <table class = \"striped bordered\">\n                        <thead>\n                        <tr>\n                            <th style=\"width: 4%\">{{ $t('table.num') }}</th>\n                            <th>{{ $t('table.name') }}</th>\n                            <th>{{ $t('table.description') }}</th>\n                            <th>{{ $t('table.created') }}</th>\n                            <th>{{ $t('table.updated') }}</th>\n                            <th>{{ $t('table.actions') }}</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr v-for=\"(canal, index) in displayChannels\"  :key=\"index\" :data-url=\"'/dashboard/channels/' + canal.id +  '/view'\">\n                            <td>{{ index + 1 }}</td>\n                            <td>{{canal.nom}}</td>\n                            <td>{{canal.description.length > 40 ? canal.description.substring(1, 50) + '...': canal.description }}</td>\n                            <td>{{getDateCreated(canal.dateCreation)}}</td>\n                            <td>{{getDateCreated(canal.dateCreation)}}</td>\n                            <td class=\"action not-allowed\">\n                                <router-link :to=\"{ name: 'view', params: { id: canal.id}}\">\n                                    <i class=\"fa fa-chart-bar\"></i>\n                                </router-link>\n                                <router-link :to=\"{ name: 'api-key', params: { id: canal.id}}\">\n                                    <i class=\"material-icons prefix\">vpn_key</i>\n                                </router-link>\n                                <router-link :to=\"{ name: 'settings', params: { id: canal.id}}\">\n                                    <i class=\"material-icons prefix\">settings</i>\n                                </router-link>\n                                <a href=\"#\" @click=\"deleteChannel(canal.id, index)\">\n                                    <i class=\"material-icons prefix red-text lighten-2\">delete</i>\n                                </a>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"right\">\n                        <ul v-if=\"pages.length > 1\" class=\"pagination\">\n                            <li v-if=\"page != 1\" @click=\"page--\"><a href=\"#!\"><i class=\"material-icons\">chevron_left</i></a></li>\n                            <li v-for=\"pageNumber in pages.slice(page-1, page+5)\" :key=\"pageNumber\" @click=\"page = pageNumber\" :class=\"{active: page == pageNumber }\"><a href=\"#!\">{{pageNumber}}</a></li>\n                            <li class=\"waves-effect\"  @click=\"page++\" v-if=\"page < pages.length\"><a href=\"#!\"><i class=\"material-icons\">chevron_right</i></a></li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"col l4 s12\">\n                    <div class=\"help\">\n                        <h4>{{ $t('help') }}</h4>\n                        <p v-html=\"this.$t('text')\"></p>\n                    </div>\n                </div>\n            </div>\n            <div v-else class=\"row\">\n                <div  class=\"col s12\">\n                    <div class=\"alert alert-info\" role=\"alert\">\n                        {{ $t('no-channel') }}\n                    </div>\n                    <router-link :to=\"{ name: 'new-channel' }\" class=\"waves-effect waves-light btn\">\n                        {{ $t('add-channel') }}\n                    </router-link>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script>\n    import { mapGetters, mapActions } from 'vuex'\n    export default {\n        name: \"my-channels\",\n        data(){\n            return{\n                CreatedDate: '',\n                page: 1,\n                perPage: 3,\n                pages: [],\n            }\n        },\n        computed: {\n            ...mapGetters(['getCanals', 'getUserId']),\n            displayChannels () {\n                return this.paginate(this.getCanals);\n            }\n        },\n        methods:{\n            ...mapActions(['deleteRequest']),\n            getDateCreated(data){\n                return data.substring(0,10);\n            },\n            deleteChannel:function (canalID, index) {\n                var confirmR = confirm(this.$t('canal.delete-msg'));\n                if (confirmR){\n                    var payload={\n                        'link':'/canal-service/canals/'+ canalID,\n                        'mutation':'setCanals',\n                    };\n                    this.deleteRequest(payload).then(() => {\n                        this.getCanals.splice(index, 1);\n                        if(this.getCanals.length === 0){\n                            this.$store.state.canals = null;\n                        }\n                        this.flash(this.$t('canal.delete-success'), 'success');\n                    }).catch(() => {\n                        this.flash(this.$t('canal.delete-error'), 'error');\n                    })\n                }\n            },\n            setPages () {\n                this.pages = [];\n                let numberOfPages = Math.ceil(this.getCanals.length / this.perPage);\n                for (let index = 1; index <= numberOfPages; index++) {\n                    this.pages.push(index);\n                }\n            },\n            paginate (channels) {\n                let page = this.page;\n                let perPage = this.perPage;\n                let from = (page * perPage) - perPage;\n                let to = (page * perPage);\n                return  channels.slice(from, to);\n            }\n        },\n        watch: {\n            getCanals() {\n                this.setPages();\n            }\n        },\n        created() {\n            console.log(this.getUserId)\n            var payload = {\n                'link': '/canal-service/canals/'+ this.getUserId,\n                'mutation': 'setCanals',\n                'all': false\n            };\n            this.$store.dispatch('getRequest', payload);\n        },\n        mounted(){\n            $(\"tr\").find(\"td\").click(function(){\n                if (!($(this).hasClass(\"not-allowed\"))){\n                    window.location = $(this).parent(\"tr\").data('url');\n                }\n            });\n        }\n    }\n</script>\n<i18n>\n    {\n    \"en\": {\n    \"main-title\": \"My Channels\",\n    \"no-channel\": \"No Channel to displayed\",\n    \"add-channel\": \"New Channel\",\n    \"help\": \"Help\",\n    \"text\": \"Collect data in a Iot-Platform ESI-SBA channel from a device, from another channel, or from the web. <br>Click <strong>New Channel </strong> to create a new Iot-Platform ESI-SBA channel. <br>Click on the column headers of the table to sort by the entries in that column or click on a tag to show channels with that tag.\",\n    \"table\": {\n    \"num\": \"#\",\n    \"name\": \"Name\",\n    \"description\": \"Description\",\n    \"created\": \"Created\",\n    \"updated\": \"Updated\",\n    \"actions\": \"Actions\"\n    }\n    },\n    \"fr\": {\n    \"main-title\": \"Mes Canaux\",\n    \"no-channel\": \"Aucun Canal à Afficher\",\n    \"add-channel\": \"Nouveau Canal\",\n    \"help\": \"Aide\",\n    \"text\": \"Collectez des données sur un canal ESI-SBA Iot-Platform à partir d'un périphérique, d'un autre canal ou du Web. <br> Cliquez sur <strong> Nouveau canal </strong> pour créer un nouveau canal ESI-SBA Iot-Platform. <br> Cliquez sur les en-têtes de colonne du tableau pour trier les entrées de cette colonne ou cliquez sur une balise pour afficher les canaux avec cette balise.\",\n    \"table\": {\n    \"num\": \"#\",\n    \"name\": \"Nom\",\n    \"description\": \"Description\",\n    \"created\": \"Créé\",\n    \"updated\": \"mis à jour\",\n    \"actions\": \"Actions\"\n    }\n    }\n    }\n</i18n>\n"]}]}