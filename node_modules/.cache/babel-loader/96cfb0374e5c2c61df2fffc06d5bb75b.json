{"remainingRequest":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/babel-loader/lib/index.js!/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/src/components/SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/src/components/SignUp.vue","mtime":1577099079660},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport { required, minLength, sameAs } from 'vuelidate/lib/validators';\nimport Form from \"@/components/Form\";\nexport default {\n  name: \"SignUp\",\n  components: {\n    'generic-form': Form\n  },\n  data: function data() {\n    return {\n      component: 'sign-up',\n      selected: 1,\n      username: '',\n      email: '',\n      password: '',\n      confpass: '',\n      look: false\n    };\n  },\n  methods: _objectSpread({}, mapActions(['switchProgress', 'postRequest']), {\n    register: function register() {\n      var _this = this;\n\n      this.look = true;\n      var postData = {\n        username: this.username,\n        email: this.email,\n        password: this.password,\n        passwordConfirmed: this.confpass\n      };\n      var payload = {\n        'data': postData,\n        'link': '/authentification-service/register'\n      };\n      this.postRequest(payload).then(function () {\n        _this.flash(_this.$t('auth.success'), 'success');\n\n        _this.look = false;\n      }).catch(function () {\n        _this.flash(_this.$t('auth.error'), 'error');\n\n        _this.look = true;\n      });\n    }\n  }),\n  validations: {\n    username: {\n      required: required\n    },\n    email: {\n      required: required\n    },\n    password: {\n      required: required,\n      minLength: minLength(8)\n    },\n    confpass: {\n      required: required,\n      sameAsPassword: sameAs('password')\n    }\n  }\n};",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,QAAA,EAAA,SAAA,EAAA,MAAA,QAAA,0BAAA;AACA,OAAA,IAAA,MAAA,mBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,UAAA,EAAA;AACA,oBAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,SADA;AAEA,MAAA,QAAA,EAAA,CAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,EALA;AAMA,MAAA,QAAA,EAAA,EANA;AAOA,MAAA,IAAA,EAAA;AAPA,KAAA;AASA,GAfA;AAgBA,EAAA,OAAA,oBACA,UAAA,CAAA,CACA,gBADA,EAEA,aAFA,CAAA,CADA;AAKA,IAAA,QALA,sBAKA;AAAA;;AACA,WAAA,IAAA,GAAA,IAAA;AACA,UAAA,QAAA,GAAA;AACA,QAAA,QAAA,EAAA,KAAA,QADA;AAEA,QAAA,KAAA,EAAA,KAAA,KAFA;AAGA,QAAA,QAAA,EAAA,KAAA,QAHA;AAIA,QAAA,iBAAA,EAAA,KAAA;AAJA,OAAA;AAMA,UAAA,OAAA,GAAA;AACA,gBAAA,QADA;AAEA,gBAAA;AAFA,OAAA;AAIA,WAAA,WAAA,CAAA,OAAA,EAAA,IAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,cAAA,CAAA,EAAA,SAAA;;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,KAAA;AACA,OAHA,EAGA,KAHA,CAGA,YAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,OAAA;;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA,OANA;AAOA;AAxBA,IAhBA;AA0CA,EAAA,WAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KADA;AAIA,IAAA,KAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KAJA;AAOA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAFA,KAPA;AAWA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,cAAA,EAAA,MAAA,CAAA,UAAA;AAFA;AAXA;AA1CA,CAAA","sourcesContent":["<template>\n    <div id=\"sign-up\" class=\"col s12\">\n        <form class=\"form col s12\" @submit.prevent=\"register\">\n            <div class=\"form-container\">\n                <h4>{{ $t('auth.welcome') }}</h4>\n                <generic-form>\n                    <div slot=\"form-fields\">\n                        <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                                <i class=\"material-icons prefix\">account_circle</i>\n                                <input\n                                        id=\"username\"\n                                        type=\"text\"\n                                        class=\"validate\"\n                                        required v-model=\"username\"\n                                        @input=\"$v.username.$touch()\">\n                                <label for=\"username\">{{ $t('auth.username') }}</label>\n                                <div v-if=\"$v.username.$dirty\">\n                                    <p class=\"error-message red-text \" v-if=\"!$v.username.required\">\n                                        {{ $t('errors.required') }}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                                <i class=\"material-icons prefix\">email</i>\n                                <input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        class=\"validate\"\n                                        required v-model=\"email\"\n                                        @input=\"$v.email.$touch()\">\n                                <label for=\"email\">{{ $t('auth.email') }}</label>\n                                <div v-if=\"$v.email.$dirty\">\n                                    <p class=\"error-message red-text \" v-if=\"!$v.email.required\">\n                                        {{ $t('errors.required') }}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"input-field col s6\">\n                                <i class=\"material-icons prefix\">lock</i>\n                                <input\n                                        id=\"password\"\n                                        type=\"password\"\n                                        class=\"validate\"\n                                        required\n                                        minlength=\"8\"\n                                        v-model=\"password\"\n                                        @input=\"$v.password.$touch()\">\n                                <label for=\"password\">{{ $t('auth.password') }}</label>\n                            </div>\n                            <div class=\"input-field col s6\">\n                                <input\n                                        id=\"passwordCheck\"\n                                        type=\"password\"\n                                        class=\"validate\"\n                                        required\n                                        minlength=\"8\"\n                                        v-model=\"confpass\"\n                                        @input=\"$v.confpass.$touch()\">\n                                <label for=\"passwordCheck\">{{ $t('auth.conf-password') }}</label>\n                            </div>\n                            <div class=\"col s12\">\n                                <div v-if=\"$v.password.$dirty\">\n                                    <p class=\"error-message red-text \" v-if=\"!$v.password.required || !$v.confpass.required\">\n                                        {{ $t('errors.required') }}\n                                    </p>\n                                    <p class=\"error-message red-text \" v-if=\"!$v.password.minLength\">\n                                        {{ $t('errors.min-length-password', {minLength: 8}) }}\n                                    </p>\n                                </div>\n                                <div v-if=\"$v.confpass.$dirty\">\n                                    <p class=\"error-message red-text \" v-if=\"!$v.confpass.sameAsPassword\">\n                                        {{ $t('errors.same-as') }}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div slot=\"form-controls\">\n                        <center>\n                            <button :disabled=\"look === true\" class=\"btn waves-effect waves-light  submit\" type=\"submit\" name=\"action\">{{ $t('auth.sign-up') }}</button>\n                        </center>\n                    </div>\n                </generic-form>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n    import {  mapActions } from 'vuex';\n    import { required, minLength, sameAs } from 'vuelidate/lib/validators'\n    import Form from \"@/components/Form\";\n    export default {\n        name: \"SignUp\",\n        components: {\n            'generic-form': Form\n        },\n        data() {\n            return {\n                component: 'sign-up',\n                selected: 1,\n                username: '',\n                email: '',\n                password: '',\n                confpass:'',\n                look: false\n            }\n        },\n        methods: {\n            ...mapActions([\n                'switchProgress',\n                'postRequest'\n            ]),\n            register(){\n                this.look = true;\n                var postData = {\n                    username: this.username,\n                    email: this.email,\n                    password: this.password,\n                    passwordConfirmed: this.confpass\n                };\n                var payload = {\n                    'data': postData,\n                    'link': '/authentification-service/register'\n                };\n                this.postRequest(payload).then(() => {\n                    this.flash(this.$t('auth.success'), 'success');\n                    this.look = false;\n                }).catch( ()=> {\n                    this.flash(this.$t('auth.error'), 'error');\n                    this.look = true;\n                });\n            }\n        },\n        validations: {\n            username: {\n                required,\n            },\n            email: {\n                required,\n            },\n            password: {\n                required,\n                minLength: minLength(8),\n            },\n            confpass: {\n                required,\n                sameAsPassword: sameAs('password')\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n\n</style>\n"],"sourceRoot":"src/components"}]}