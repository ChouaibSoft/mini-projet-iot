{"remainingRequest":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/babel-loader/lib/index.js!/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/src/views/MyChannels.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/src/views/MyChannels.vue","mtime":1555496900535},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  name: \"my-channels\",\n  computed: _objectSpread({}, mapGetters(['getCanals'])),\n  created: function created() {\n    var payload = {\n      'link': '/appUsers/' + this.$store.state.userId + '/canals',\n      'mutation': 'setCanals'\n    };\n    this.$store.dispatch('getRequest', payload);\n  }\n};",{"version":3,"sources":["MyChannels.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,WAAA,CAAA,CADA,CAFA;AAKA,EAAA,OALA,qBAKA;AACA,QAAA,OAAA,GAAA;AACA,cAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,GAAA,SADA;AAEA,kBAAA;AAFA,KAAA;AAKA,SAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,OAAA;AACA;AAZA,CAAA","sourcesContent":["<template>\n    <div id=\"content\">\n        <div class=\"row page-title-path\">\n            <div class=\"col\">\n                <h2>{{ $t('main-title') }}</h2>\n            </div>\n            <div class=\"col right\">\n                <p>Home > <span> My Channels</span></p>\n            </div>\n\n        </div>\n        <section class=\"component-section\">\n            <div v-if=\"getCanals.length > 0\" class=\"row\">\n                <div class=\"col s12 l8\">\n                    <table class = \"striped bordered responsive-table\">\n                        <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Description</th>\n                            <th>Created at</th>\n                        </tr>\n                        </thead>\n\n                        <tbody>\n                        <tr v-for=\"canal in getCanals\">\n                            <td>{{canal.nom}}</td>\n                            <td>{{canal.description}}</td>\n                            <td>{{canal.dateCreation}}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"col l4 s12\">\n                    <div class=\"help\">\n                        <h4>Help</h4>\n                        <p>\n                            Collect data in a ThingSpeak channel from a device, from another channel, or from the web.<br>\n                            Click <strong>New Channel</strong> to create a new ThingSpeak channel.<br>\n                            Click on the column headers of the table to sort by the entries in that column or click on a tag to show channels with that tag.                        </p>\n                    </div>\n                </div>\n            </div>\n            <div v-else class=\"row\">\n                <div  class=\"col s12\">\n                    <div class=\"alert alert-info\" role=\"alert\">\n                        {{ $t('no-channel') }}\n                    </div>\n                    <router-link to=\"/dashboard/channels/new\" class=\"waves-effect waves-light btn\">\n                        {{ $t('add-channel') }}\n                    </router-link>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script>\n    import { mapGetters } from 'vuex'\n    export default {\n        name: \"my-channels\",\n        computed: {\n            ...mapGetters(['getCanals'])\n        },\n        created() {\n            var payload = {\n                'link': '/appUsers/' + this.$store.state.userId + '/canals',\n                'mutation': 'setCanals'\n\n            };\n            this.$store.dispatch('getRequest', payload);\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n<i18n>\n    {\n    \"en\": {\n    \"main-title\": \"My Channels\",\n    \"no-channel\": \"No Channel to displayed\",\n    \"add-channel\": \"New Channel\"\n    },\n    \"fr\": {\n    \"main-title\": \"Mes Canaux\",\n    \"no-channel\": \"Aucun Canal Ã  Afficher\",\n    \"add-channel\": \"Nouveau Canal\"\n\n    }\n    }\n</i18n>\n"],"sourceRoot":"src/views"}]}