{"remainingRequest":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/babel-loader/lib/index.js!/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/eslint-loader/index.js??ref--13-0!/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/src/store/mutations.js","dependencies":[{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/src/store/mutations.js","mtime":1558101132000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var mutations = {\n  LOGOUT: function LOGOUT(state) {\n    state.token = null;\n    state.isLogged = false;\n  },\n  switchProgress: function switchProgress(state) {\n    state.progress = !state.progress;\n  },\n  saveUserId: function saveUserId(state, id) {\n    state.userId = id;\n  },\n  saveUserToken: function saveUserToken(state, token) {\n    state.isLogged = true;\n    state.token = token;\n  },\n  deleteToken: function deleteToken(state) {\n    state.token = null;\n  },\n  // Channels & Fields\n  setCanals: function setCanals(state, payload) {\n    state.canals = payload;\n  },\n  setCanal: function setCanal(state, payload) {\n    state.canal = payload;\n  },\n  setFields: function setFields(state, payload) {\n    state.fields = payload;\n  },\n  // Triggers & Commands\n  setTriggers: function setTriggers(state, payload) {\n    state.triggers = payload;\n  },\n  setTrigger: function setTrigger(state, payload) {\n    state.trigger = payload;\n  },\n  setCommands: function setCommands(state, payload) {\n    state.commands = payload;\n  },\n  // React\n  setReacts: function setReacts(state, payload) {\n    state.reacts = payload;\n  },\n  setReact: function setReact(state, payload) {\n    state.react = payload;\n  },\n  changeLocale: function changeLocale(state, lang) {\n    state.locale = lang.language;\n    state.flag = lang.flag;\n  }\n};\nexport default mutations;",{"version":3,"sources":["/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/src/store/mutations.js"],"names":["mutations","LOGOUT","state","token","isLogged","switchProgress","progress","saveUserId","id","userId","saveUserToken","deleteToken","setCanals","payload","canals","setCanal","canal","setFields","fields","setTriggers","triggers","setTrigger","trigger","setCommands","commands","setReacts","reacts","setReact","react","changeLocale","lang","locale","language","flag"],"mappings":"AAAA,IAAMA,SAAS,GAAG;AACdC,EAAAA,MADc,kBACPC,KADO,EACA;AACVA,IAAAA,KAAK,CAACC,KAAN,GAAc,IAAd;AACAD,IAAAA,KAAK,CAACE,QAAN,GAAiB,KAAjB;AACH,GAJa;AAKdC,EAAAA,cALc,0BAKCH,KALD,EAKQ;AAClBA,IAAAA,KAAK,CAACI,QAAN,GAAiB,CAACJ,KAAK,CAACI,QAAxB;AACH,GAPa;AAQdC,EAAAA,UARc,sBAQFL,KARE,EAQKM,EARL,EAQS;AACnBN,IAAAA,KAAK,CAACO,MAAN,GAAeD,EAAf;AACH,GAVa;AAWdE,EAAAA,aAXc,yBAWCR,KAXD,EAWQC,KAXR,EAWe;AACzBD,IAAAA,KAAK,CAACE,QAAN,GAAiB,IAAjB;AACAF,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACH,GAda;AAedQ,EAAAA,WAfc,uBAeFT,KAfE,EAeI;AACdA,IAAAA,KAAK,CAACC,KAAN,GAAc,IAAd;AACH,GAjBa;AAkBd;AACAS,EAAAA,SAnBc,qBAmBJV,KAnBI,EAmBGW,OAnBH,EAmBW;AACrBX,IAAAA,KAAK,CAACY,MAAN,GAAeD,OAAf;AACH,GArBa;AAsBdE,EAAAA,QAtBc,oBAsBLb,KAtBK,EAsBEW,OAtBF,EAsBU;AACpBX,IAAAA,KAAK,CAACc,KAAN,GAAcH,OAAd;AACH,GAxBa;AAyBdI,EAAAA,SAzBc,qBAyBJf,KAzBI,EAyBGW,OAzBH,EAyBW;AACrBX,IAAAA,KAAK,CAACgB,MAAN,GAAeL,OAAf;AACH,GA3Ba;AA4Bd;AACAM,EAAAA,WA7Bc,uBA6BFjB,KA7BE,EA6BKW,OA7BL,EA6Ba;AACvBX,IAAAA,KAAK,CAACkB,QAAN,GAAiBP,OAAjB;AACH,GA/Ba;AAgCdQ,EAAAA,UAhCc,sBAgCHnB,KAhCG,EAgCIW,OAhCJ,EAgCY;AACtBX,IAAAA,KAAK,CAACoB,OAAN,GAAgBT,OAAhB;AACH,GAlCa;AAmCdU,EAAAA,WAnCc,uBAmCFrB,KAnCE,EAmCKW,OAnCL,EAmCa;AACvBX,IAAAA,KAAK,CAACsB,QAAN,GAAiBX,OAAjB;AACH,GArCa;AAuCd;AACAY,EAAAA,SAxCc,qBAwCJvB,KAxCI,EAwCGW,OAxCH,EAwCW;AACrBX,IAAAA,KAAK,CAACwB,MAAN,GAAeb,OAAf;AACH,GA1Ca;AA2Cdc,EAAAA,QA3Cc,oBA2CLzB,KA3CK,EA2CEW,OA3CF,EA2CU;AACpBX,IAAAA,KAAK,CAAC0B,KAAN,GAAcf,OAAd;AACH,GA7Ca;AA+CdgB,EAAAA,YA/Cc,wBA+CD3B,KA/CC,EA+CM4B,IA/CN,EA+CW;AACrB5B,IAAAA,KAAK,CAAC6B,MAAN,GAAeD,IAAI,CAACE,QAApB;AACA9B,IAAAA,KAAK,CAAC+B,IAAN,GAAaH,IAAI,CAACG,IAAlB;AACH;AAlDa,CAAlB;AAoDA,eAAejC,SAAf","sourcesContent":["const mutations = {\n    LOGOUT(state) {\n        state.token = null;\n        state.isLogged = false;\n    },\n    switchProgress(state) {\n        state.progress = !state.progress;\n    },\n    saveUserId (state, id) {\n        state.userId = id\n    },\n    saveUserToken (state, token) {\n        state.isLogged = true;\n        state.token = token;\n    },\n    deleteToken(state){\n        state.token = null;\n    },\n    // Channels & Fields\n    setCanals(state, payload){\n        state.canals = payload;\n    },\n    setCanal(state, payload){\n        state.canal = payload;\n    },\n    setFields(state, payload){\n        state.fields = payload;\n    },\n    // Triggers & Commands\n    setTriggers(state, payload){\n        state.triggers = payload;\n    },\n    setTrigger(state, payload){\n        state.trigger = payload;\n    },\n    setCommands(state, payload){\n        state.commands = payload;\n    },\n\n    // React\n    setReacts(state, payload){\n        state.reacts = payload;\n    },\n    setReact(state, payload){\n        state.react = payload;\n    },\n\n    changeLocale(state, lang){\n        state.locale = lang.language;\n        state.flag = lang.flag;\n    }\n}\nexport default mutations\n"]}]}