{"remainingRequest":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/babel-loader/lib/index.js!/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/eslint-loader/index.js??ref--13-0!/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/src/store/actions.js","dependencies":[{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/src/store/actions.js","mtime":1558136406198},{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.link\";\nimport router from \"../router\";\nimport axios from \"axios\";\nimport i18n from \"../i18n\";\nvar actions = {\n  logout: function logout(_ref) {\n    var commit = _ref.commit;\n    router.push('/');\n    commit('LOGOUT');\n  },\n  switchProgress: function switchProgress(_ref2) {\n    var commit = _ref2.commit;\n    commit('switchProgress');\n  },\n  saveUserId: function saveUserId(context, Id) {\n    context.commit('saveUserId', Id);\n  },\n  saveUserToken: function saveUserToken(context, token) {\n    context.commit('saveUserToken', token);\n  },\n  postRequest: function postRequest(_ref3, payload) {\n    var state = _ref3.state;\n    var headers = {\n      'Content-Type': 'application/json;charset=UTF-8'\n    };\n\n    if (state.token != null) {\n      headers['Authorization'] = 'Bearer ' + state.token;\n    }\n\n    return axios.post(state.apiURL + payload.link, payload.data, {\n      headers: headers\n    });\n  },\n  deleteRequest: function deleteRequest(_ref4, payload) {\n    var state = _ref4.state;\n    axios.delete(state.apiURL + payload.link, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + state.token\n      }\n    });\n  },\n  getRequest: function getRequest(_ref5, payload) {\n    var state = _ref5.state,\n        commit = _ref5.commit;\n    axios.get(state.apiURL + payload.link, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + state.token\n      }\n    }).then(function (request) {\n      if (payload.all) {\n        if (request.data.content[0].id === undefined) {\n          commit(payload.mutation, null);\n        } else {\n          commit(payload.mutation, request.data.content);\n        }\n      } else {\n        commit(payload.mutation, request.data);\n      }\n    }).catch(function (error) {\n      commit(payload.mutation, null);\n      router.push(\"/dashboard\");\n    });\n  },\n  changeLocale: function changeLocale(_ref6, lang) {\n    var commit = _ref6.commit,\n        state = _ref6.state;\n    commit('changeLocale', lang);\n    i18n.locale = state.locale;\n  },\n  setPages: function setPages(perPageParam) {\n    var numberOfPages = Math.ceil(this.getCommands.length / perPageParam);\n\n    for (var index = 1; index <= numberOfPages; index++) {\n      this.pages.push(index);\n    }\n  },\n  paginate: function paginate(record, pageParam, perPageParam) {\n    var page = pageParam;\n    var perPage = perPageParam;\n    var from = page * perPage - perPage;\n    var to = page * perPage;\n    return record.slice(from, to);\n  }\n};\nexport default actions;",{"version":3,"sources":["/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/src/store/actions.js"],"names":["router","axios","i18n","actions","logout","commit","push","switchProgress","saveUserId","context","Id","saveUserToken","token","postRequest","payload","state","headers","post","apiURL","link","data","deleteRequest","delete","getRequest","get","then","request","all","content","id","undefined","mutation","catch","error","changeLocale","lang","locale","setPages","perPageParam","numberOfPages","Math","ceil","getCommands","length","index","pages","paginate","record","pageParam","page","perPage","from","to","slice"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,MADY,wBACO;AAAA,QAAVC,MAAU,QAAVA,MAAU;AACfL,IAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ;AACAD,IAAAA,MAAM,CAAC,QAAD,CAAN;AACH,GAJW;AAKZE,EAAAA,cALY,iCAKe;AAAA,QAAVF,MAAU,SAAVA,MAAU;AACvBA,IAAAA,MAAM,CAAC,gBAAD,CAAN;AACH,GAPW;AAQZG,EAAAA,UARY,sBAQAC,OARA,EAQSC,EART,EAQa;AACrBD,IAAAA,OAAO,CAACJ,MAAR,CAAe,YAAf,EAA6BK,EAA7B;AACH,GAVW;AAWZC,EAAAA,aAXY,yBAWGF,OAXH,EAWYG,KAXZ,EAWmB;AAC3BH,IAAAA,OAAO,CAACJ,MAAR,CAAe,eAAf,EAAgCO,KAAhC;AACH,GAbW;AAcZC,EAAAA,WAdY,8BAcUC,OAdV,EAckB;AAAA,QAAjBC,KAAiB,SAAjBA,KAAiB;AAC1B,QAAIC,OAAO,GAAG;AACV,sBAAgB;AADN,KAAd;;AAIA,QAAID,KAAK,CAACH,KAAN,IAAe,IAAnB,EAAwB;AACpBI,MAAAA,OAAO,CAAC,eAAD,CAAP,GAA2B,YAAWD,KAAK,CAACH,KAA5C;AACH;;AACD,WAAOX,KAAK,CAACgB,IAAN,CAAWF,KAAK,CAACG,MAAN,GAAeJ,OAAO,CAACK,IAAlC,EAAwCL,OAAO,CAACM,IAAhD,EAAsD;AACzDJ,MAAAA,OAAO,EAAPA;AADyD,KAAtD,CAAP;AAGH,GAzBW;AA0BZK,EAAAA,aA1BY,gCA0BUP,OA1BV,EA0BkB;AAAA,QAAfC,KAAe,SAAfA,KAAe;AAC1Bd,IAAAA,KAAK,CAACqB,MAAN,CAAaP,KAAK,CAACG,MAAN,GAAaJ,OAAO,CAACK,IAAlC,EAAwC;AAChCH,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiB,YAAYD,KAAK,CAACH;AAF9B;AADuB,KAAxC;AAOH,GAlCW;AAmCZW,EAAAA,UAnCY,6BAmCgBT,OAnChB,EAmCyB;AAAA,QAAzBC,KAAyB,SAAzBA,KAAyB;AAAA,QAAlBV,MAAkB,SAAlBA,MAAkB;AACjCJ,IAAAA,KAAK,CAACuB,GAAN,CAAUT,KAAK,CAACG,MAAN,GAAeJ,OAAO,CAACK,IAAjC,EAAuC;AACnCH,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiB,YAAYD,KAAK,CAACH;AAF9B;AAD0B,KAAvC,EAKGa,IALH,CAKQ,UAAAC,OAAO,EAAI;AACf,UAAIZ,OAAO,CAACa,GAAZ,EAAgB;AACZ,YAAID,OAAO,CAACN,IAAR,CAAaQ,OAAb,CAAqB,CAArB,EAAwBC,EAAxB,KAA+BC,SAAnC,EAA6C;AACzCzB,UAAAA,MAAM,CAACS,OAAO,CAACiB,QAAT,EAAmB,IAAnB,CAAN;AACH,SAFD,MAEK;AACD1B,UAAAA,MAAM,CAACS,OAAO,CAACiB,QAAT,EAAmBL,OAAO,CAACN,IAAR,CAAaQ,OAAhC,CAAN;AACH;AACJ,OAND,MAMK;AACDvB,QAAAA,MAAM,CAACS,OAAO,CAACiB,QAAT,EAAmBL,OAAO,CAACN,IAA3B,CAAN;AACH;AACJ,KAfD,EAeGY,KAfH,CAeS,UAAAC,KAAK,EAAI;AACd5B,MAAAA,MAAM,CAACS,OAAO,CAACiB,QAAT,EAAmB,IAAnB,CAAN;AACA/B,MAAAA,MAAM,CAACM,IAAP,CAAY,YAAZ;AACH,KAlBD;AAmBH,GAvDW;AAwDZ4B,EAAAA,YAxDY,+BAwDkBC,IAxDlB,EAwDuB;AAAA,QAArB9B,MAAqB,SAArBA,MAAqB;AAAA,QAAbU,KAAa,SAAbA,KAAa;AAC/BV,IAAAA,MAAM,CAAC,cAAD,EAAiB8B,IAAjB,CAAN;AACAjC,IAAAA,IAAI,CAACkC,MAAL,GAAcrB,KAAK,CAACqB,MAApB;AACH,GA3DW;AA4DZC,EAAAA,QA5DY,oBA4DFC,YA5DE,EA4DY;AACpB,QAAIC,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAU,KAAKC,WAAL,CAAiBC,MAAjB,GAA0BL,YAApC,CAApB;;AACA,SAAK,IAAIM,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIL,aAA7B,EAA4CK,KAAK,EAAjD,EAAqD;AACjD,WAAKC,KAAL,CAAWvC,IAAX,CAAgBsC,KAAhB;AACH;AACJ,GAjEW;AAkEZE,EAAAA,QAlEY,oBAkEFC,MAlEE,EAkEMC,SAlEN,EAkEiBV,YAlEjB,EAkE+B;AACvC,QAAIW,IAAI,GAAGD,SAAX;AACA,QAAIE,OAAO,GAAGZ,YAAd;AACA,QAAIa,IAAI,GAAIF,IAAI,GAAGC,OAAR,GAAmBA,OAA9B;AACA,QAAIE,EAAE,GAAIH,IAAI,GAAGC,OAAjB;AACA,WAAQH,MAAM,CAACM,KAAP,CAAaF,IAAb,EAAmBC,EAAnB,CAAR;AACH;AAxEW,CAAhB;AA0EA,eAAejD,OAAf","sourcesContent":["import router from \"../router\";\nimport axios from \"axios\";\nimport i18n from \"../i18n\";\n\nconst actions = {\n    logout({ commit }) {\n        router.push('/');\n        commit('LOGOUT');\n    },\n    switchProgress({ commit }) {\n        commit('switchProgress');\n    },\n    saveUserId (context, Id) {\n        context.commit('saveUserId', Id)\n    },\n    saveUserToken (context, token) {\n        context.commit('saveUserToken', token)\n    },\n    postRequest({state},  payload){\n        var headers = {\n            'Content-Type': 'application/json;charset=UTF-8',\n\n        };\n        if (state.token != null){\n            headers['Authorization'] = 'Bearer '+ state.token\n        }\n        return axios.post(state.apiURL + payload.link, payload.data, {\n            headers\n        })\n    },\n    deleteRequest({state},payload){\n        axios.delete(state.apiURL+payload.link, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + state.token\n                }\n            }\n        );\n    },\n    getRequest({state, commit}, payload) {\n        axios.get(state.apiURL + payload.link, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + state.token\n            }\n        }).then(request => {\n            if (payload.all){\n                if (request.data.content[0].id === undefined){\n                    commit(payload.mutation, null);\n                }else{\n                    commit(payload.mutation, request.data.content);\n                }\n            }else{\n                commit(payload.mutation, request.data);\n            }\n        }).catch(error => {\n            commit(payload.mutation, null);\n            router.push(\"/dashboard\");\n        })\n    },\n    changeLocale({commit, state}, lang){\n        commit('changeLocale', lang);\n        i18n.locale = state.locale;\n    },\n    setPages (perPageParam) {\n        let numberOfPages = Math.ceil(this.getCommands.length / perPageParam);\n        for (let index = 1; index <= numberOfPages; index++) {\n            this.pages.push(index);\n        }\n    },\n    paginate (record, pageParam, perPageParam) {\n        let page = pageParam;\n        let perPage = perPageParam;\n        let from = (page * perPage) - perPage;\n        let to = (page * perPage);\n        return  record.slice(from, to);\n    }\n};\nexport default actions;\n"]}]}