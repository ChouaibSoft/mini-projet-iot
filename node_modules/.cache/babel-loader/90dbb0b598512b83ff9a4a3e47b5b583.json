{"remainingRequest":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/babel-loader/lib/index.js!/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/src/components/APIKeys.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/src/components/APIKeys.vue","mtime":1562083217725},{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/clokbani/linux/DevWeb/Iot-Project/Front/iot-platform/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Form from \"@/components/Form\";\nimport { mapGetters } from 'vuex';\nexport default {\n  name: \"API-keys\",\n  components: {\n    'generic-form': Form\n  },\n  data: function data() {\n    return {\n      paramlist: '',\n      keyWrite: '',\n      keyRead: '',\n      isShow: false,\n      isDisabled: false,\n      isValid: false,\n      isActive: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['getCanal', 'getFields'])),\n  methods: {\n    keyGenerator: function keyGenerator() {\n      var _this = this;\n\n      console.log(this.$store);\n      this.keyWrite = this.$store.getters.getCanal.cleEcriture;\n      this.keyRead = this.$store.getters.getCanal.cleLecture;\n      this.getFields.forEach(function (f) {\n        _this.paramlist = _this.paramlist + \"&\" + f.nom + \"=\";\n      });\n      this.displayFields();\n      this.isShow = true;\n      this.isDisabled = true;\n      this.isValid = true;\n      this.isActive = true;\n    },\n    displayFields: function displayFields() {\n      return this.$store.getters.getFields;\n    }\n  }\n};",{"version":3,"sources":["APIKeys.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA,OAAA,IAAA,MAAA,mBAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,oBAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA,KAJA;AAKA,MAAA,UAAA,EAAA,KALA;AAMA,MAAA,OAAA,EAAA,KANA;AAOA,MAAA,QAAA,EAAA;AAPA,KAAA;AASA,GAfA;AAgBA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,UAAA,EAAA,WAAA,CAAA,CADA,CAhBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA;AACA,WAAA,QAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,WAAA;AACA,WAAA,OAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,UAAA;AACA,WAAA,SAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA,CAAA,SAAA,GAAA,GAAA,GAAA,CAAA,CAAA,GAAA,GAAA,GAAA;AACA,OAFA;AAGA,WAAA,aAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,KAbA;AAcA,IAAA,aAdA,2BAcA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,SAAA;AACA;AAhBA;AAnBA,CAAA","sourcesContent":["<template>\n    <div id=\"api-key\">\n        <div class=\"row\">\n            <div class=\"col s12 l6\">\n                <form class=\"form\" id=\"add-canal\" @submit.prevent.once=\"keyGenerator\">\n                    <generic-form>\n                        <div slot=\"form-fields\">\n                            <div class=\"row\">\n                                <div class=\"input-field col s12\">\n                                    <input\n                                            id=\"write-key\"\n                                            type=\"text\"\n                                            v-model=\"this.keyWrite\"\n                                            :class=\"{valid: isValid}\"\n                                            class=\"validate\"\n                                    >\n                                    <label for=\"write-key\" :class=\"{active: isActive}\">{{ $t('write-api-key') }}</label>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"input-field col s12\">\n                                    <input\n                                            id=\"read-key\"\n                                            type=\"text\"\n                                            v-model=\"this.keyRead\"\n                                            :class=\"{valid: isValid}\"\n                                            class=\"validate\"/>\n                                    <label for=\"read-key\" :class=\"{active: isActive}\">{{ $t('read-api-key') }}</label>\n                                </div>\n                            </div>\n                        </div>\n                        <div slot=\"form-controls\">\n                            <div>\n                                <div class=\"row\">\n                                    <div class=\"col right\">\n                                        <button type=\"submit\" class=\"button waves-effect waves-light btn\" :disabled=\"isDisabled\">\n                                            {{ $t('generate') }}\n                                            <i class=\"material-icons right\">send</i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </generic-form>\n                </form>\n                <h5>{{$t('api-requests')}}</h5>\n                <div v-if=\"isShow\" class=\"urls\">\n                    <div>\n                        <h6>{{$t('update-url')}}</h6>\n                        <pre>  POST : <span>http://localhost:8082/canal-service/record?key=</span><span class=\"key\">{{getCanal.cleEcriture}}{{this.paramlist}}</span></pre>\n                    </div>\n                    <div v-if=\"isShow\">\n                        <h6>{{$t('read-url')}}</h6>\n                        <pre  v-for=\"f in displayFields()\" v-bind:key=\"f.id\">  GET : <span>http://localhost:8082/canal-service/read?key=</span><span class=\"key\">{{getCanal.cleLecture}}&field={{f.nom}}</span></pre>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col s12 l6\">\n                <div class=\"help\">\n                    <h4>{{ $t('help') }}</h4>\n                    <p>{{ $t('api-key-des') }}</p>\n                    <h5>{{ $t('api-key-settings') }}</h5>\n                    <ul class=\"help-list\">\n                        <li>\n                            <p><strong>{{ $t('write-api-key') }}</strong>{{ $t('write-api-key-det') }}</p>\n                        </li>\n                        <li>\n                            <p><strong>{{ $t('read-api-key') }}</strong>{{ $t('read-api-key-det') }}</p>\n                        </li>\n                        <li>\n                            <p><strong>{{ $t('note') }}</strong>{{ $t('note-det') }}</p>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import Form from \"@/components/Form\";\n    import {mapGetters } from 'vuex'\n    export default {\n        name: \"API-keys\",\n        components: {\n            'generic-form': Form,\n        },\n        data(){\n            return{\n                paramlist: '',\n                keyWrite: '',\n                keyRead: '',\n                isShow: false,\n                isDisabled: false,\n                isValid: false,\n                isActive: false\n            }\n        },\n        computed:{\n            ...mapGetters(['getCanal', 'getFields'])\n        },\n        methods: {\n            keyGenerator(){\n                console.log(this.$store)\n                this.keyWrite = this.$store.getters.getCanal.cleEcriture;\n                this.keyRead = this.$store.getters.getCanal.cleLecture;\n                this.getFields.forEach( f => {\n                    this.paramlist=this.paramlist + \"&\"+f.nom+\"=\";\n                });\n                this.displayFields();\n                this.isShow = true;\n                this.isDisabled = true;\n                this.isValid = true;\n                this.isActive = true;\n            },\n            displayFields(){\n                return this.$store.getters.getFields\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n<i18n>\n    {\n    \"en\": {\n    \"api-key-des\": \"API keys enable you to write data to a channel or read data from a private channel. API keys are auto-generated when you create a new channel. \",\n    \"api-key-settings\": \"API Keys Settings\",\n    \"write-api-key\": \"Write API Key : \",\n    \"write-api-key-det\": \"Use this key to write data to a channel. If you feel your key has been compromised, click Generate New Write API Key.\",\n    \"read-api-key\": \"Read API Key : \",\n    \"read-api-key-det\": \"Use this key to allow other people to view your private channel feeds and charts. Click Generate New Read API Key to generate an additional read key for the channel.\",\n    \"note\": \"Note : \",\n    \"note-det\": \"Use this field to enter information about channel read keys. For example, add notes to keep track of users with access to your channel. \",\n    \"generate\": \"Generate New API Key\",\n    \"api-requests\": \"API Requests\",\n    \"update-url\": \"Update URL\",\n    \"read-url\": \"Read URLs\"\n    },\n    \"fr\": {\n    \"api-key-des\": \"Les clés API vous permettent d'écrire des données sur un canal ou de lire des données d'un canal privé. Les clés API sont générées automatiquement lorsque vous créez un nouveau canal.\",\n    \"api-key-settings\": \"Paramètres des clés de l'API\",\n    \"write-api-key\": \"API Key d'éctiture : \",\n    \"write-api-key-det\": \"Utilisez cette touche pour écrire des données sur un canal. Si vous pensez que votre clé a été compromise, cliquez sur Générer une nouvelle clé d'API en écriture.\",\n    \"read-api-key\": \"API Key de lecture : \",\n    \"read-api-key-det\": \"Utilisez cette clé pour permettre à d’autres personnes d’afficher les flux et les graphiques de vos canaux privés. Cliquez sur Générer une nouvelle clé API de lecture pour générer une clé de lecture supplémentaire pour le canal.\",\n    \"note\": \"Note : \",\n    \"note-det\": \"Utilisez ce champ pour saisir des informations sur les clés de lecture de canal. Par exemple, ajoutez des notes pour suivre les utilisateurs ayant accès à votre chaîne.\",\n    \"generate\": \"Générer une nouvelle clé API\",\n    \"api-requests\": \"Requêtes API\",\n    \"update-url\": \"Update URL\",\n    \"read-url\": \"Read URLs\"\n    }\n    }\n</i18n>\n"],"sourceRoot":"src/components"}]}