{"remainingRequest":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/babel-loader/lib/index.js!/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/src/views/MyTriggers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/src/views/MyTriggers.vue","mtime":1563818154000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"/home/clokbani/linux/DevWeb/mini-projet-iot/iot-platform/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: \"my-triggers\",\n  data: function data() {\n    return {\n      CreatedDate: '',\n      page: 1,\n      perPage: 8,\n      pages: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['getTriggers']), {\n    displayTriggers: function displayTriggers() {\n      return this.paginate(this.getTriggers);\n    }\n  }),\n  methods: _objectSpread({}, mapActions(['deleteRequest']), {\n    getDateCreated: function getDateCreated(data) {\n      return data.substring(0, 10);\n    },\n    setPages: function setPages() {\n      this.pages = [];\n      var numberOfPages = Math.ceil(this.getTriggers.length / this.perPage);\n\n      for (var index = 1; index <= numberOfPages; index++) {\n        this.pages.push(index);\n      }\n    },\n    paginate: function paginate(triggers) {\n      var page = this.page;\n      var perPage = this.perPage;\n      var from = page * perPage - perPage;\n      var to = page * perPage;\n      return triggers.slice(from, to);\n    },\n    deleteTrigger: function deleteTrigger(triggerID, index) {\n      var _this = this;\n\n      var confirmR = confirm(this.$t('trigger.delete-msg'));\n\n      if (confirmR) {\n        var payload = {\n          'link': '/canal-service/trigers/' + triggerID,\n          'mutation': 'setTriggers'\n        };\n        this.deleteRequest(payload).then(function () {\n          _this.getTriggers.splice(index, 1);\n\n          if (_this.getTriggers.length === 0) {\n            _this.$store.state.triggers = null;\n          }\n\n          _this.flash(_this.$t('trigger.delete-success'), 'success');\n        }).catch(function () {\n          _this.flash(_this.$t('trigger.delete-error'), 'error');\n        });\n      }\n    }\n  }),\n  watch: {\n    getTriggers: function getTriggers() {\n      this.setPages();\n    }\n  },\n  created: function created() {\n    var payload = {\n      'link': '/trigger-service/userTriger/' + localStorage.getItem('userId'),\n      'mutation': 'setTriggers',\n      'all': false\n    };\n    this.$store.dispatch('getRequest', payload);\n  },\n  mounted: function mounted() {\n    $(\"tr\").find(\"td\").click(function () {\n      if (!$(this).hasClass(\"not-allowed\")) {\n        window.location = $(this).parent(\"tr\").data('url');\n      }\n    });\n    $('.modal').modal();\n  }\n};",{"version":3,"sources":["MyTriggers.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"content\">\n        <div class=\"row page-title-path\">\n            <div class=\"col\">\n                <h2>{{ $t('main-title') }}</h2>\n            </div>\n            <div class=\"col right\">\n                <p>Home > <span>{{ $t('main-title') }}</span></p>\n            </div>\n\n        </div>\n        <section class=\"component-section\">\n            <div v-if=\"!(this.getTriggers === null) \" class=\"row\">\n                <div class=\"col s12 l8\">\n                    <table class = \"striped bordered\">\n                        <thead>\n                        <tr>\n                            <th style=\"width: 4%\">{{ $t('table.id') }}</th>\n                            <th>{{ $t('table.name') }}</th>\n                            <th>{{ $t('table.created') }}</th>\n                            <th>{{ $t('table.actions') }}</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"(trigger, index) in displayTriggers\" :key=\"trigger.id\" :data-url=\"'/dashboard/actions/' + trigger.id + '/overview'\">\n                                <td>{{index + 1}}</td>\n                                <td>{{trigger.nom}}</td>\n                                <td>30/04/2019</td>\n                                <td class=\"action not-allowed\" width=\"10%\">\n                                    <router-link :to=\"{ name: 'trigger-overview', params: { id: trigger.id}}\">\n                                        <i class=\"fa fa-plus\"></i>\n                                    </router-link>\n                                    <a href=\"#\" @click=\"deleteTrigger(trigger.id, index)\">\n                                        <i class=\"material-icons prefix red-text lighten-2\">delete</i>\n                                    </a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"right\">\n                        <ul v-if=\"pages.length > 1\" class=\"pagination\">\n                            <li v-if=\"page != 1\" @click=\"page--\"><a href=\"#!\"><i class=\"material-icons\">chevron_left</i></a></li>\n                            <li v-for=\"pageNumber in pages.slice(page-1, page+5)\" @click=\"page = pageNumber\" :class=\"{active: page == pageNumber }\"><a href=\"#!\">{{pageNumber}}</a></li>\n                            <li class=\"waves-effect\"  @click=\"page++\" v-if=\"page < pages.length\"><a href=\"#!\"><i class=\"material-icons\">chevron_right</i></a></li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"col l4 s12\">\n                    <div class=\"help\">\n                        <h4>{{ $t('help') }}</h4>\n                        <p v-html=\"this.$t('text')\"></p>\n                    </div>\n                </div>\n            </div>\n            <div v-else class=\"row\">\n                <div  class=\"col s12\">\n                    <div class=\"alert alert-info\" role=\"alert\">\n                        {{ $t('no-trigger') }}\n                    </div>\n                    <router-link :to=\"{ name: 'new-trigger'}\" class=\"waves-effect waves-light btn\">\n                        {{ $t('add-trigger') }}\n                    </router-link>\n                </div>\n            </div>\n        </section>\n\n    </div>\n</template>\n\n<script>\n    import { mapGetters, mapActions } from 'vuex'\n    export default {\n        name: \"my-triggers\",\n        data(){\n            return{\n                CreatedDate: '',\n                page: 1,\n                perPage: 8,\n                pages: [],\n            }\n        },\n        computed: {\n            ...mapGetters(['getTriggers']),\n            displayTriggers () {\n                return this.paginate(this.getTriggers);\n            }\n        },\n        methods:{\n            ...mapActions(['deleteRequest']),\n            getDateCreated(data){\n                return data.substring(0,10);\n            },\n            setPages () {\n                this.pages = [];\n                let numberOfPages = Math.ceil(this.getTriggers.length / this.perPage);\n                for (let index = 1; index <= numberOfPages; index++) {\n                    this.pages.push(index);\n                }\n            },\n            paginate (triggers) {\n                let page = this.page;\n                let perPage = this.perPage;\n                let from = (page * perPage) - perPage;\n                let to = (page * perPage);\n                return  triggers.slice(from, to);\n            },\n            deleteTrigger:function (triggerID, index) {\n                var confirmR = confirm(this.$t('trigger.delete-msg'));\n                if (confirmR){\n                    var payload={\n                        'link':'/canal-service/trigers/'+ triggerID,\n                        'mutation':'setTriggers',\n                    };\n                    this.deleteRequest(payload).then(() => {\n                        this.getTriggers.splice(index, 1);\n                        if(this.getTriggers.length === 0){\n                            this.$store.state.triggers = null;\n                        }\n                        this.flash(this.$t('trigger.delete-success'), 'success');\n                    }).catch(() => {\n                        this.flash(this.$t('trigger.delete-error'), 'error');\n                    })\n                }\n            },\n        },\n        watch: {\n            getTriggers() {\n                this.setPages();\n            }\n        },\n        created() {\n            let payload = {\n                'link': '/trigger-service/userTriger/' + localStorage.getItem('userId') ,\n                'mutation': 'setTriggers',\n                'all': false\n            };\n            this.$store.dispatch('getRequest', payload);\n        },\n        mounted(){\n            $(\"tr\").find(\"td\").click(function(){\n                if (!($(this).hasClass(\"not-allowed\"))){\n                    window.location = $(this).parent(\"tr\").data('url');\n                }\n            });\n            $('.modal').modal();\n        }\n    }\n</script>\n<i18n>\n    {\n    \"en\": {\n    \"main-title\": \"My Actions\",\n    \"no-trigger\": \"No Action to display\",\n    \"add-trigger\": \"New Action\",\n    \"help\": \"Help\",\n    \"text\": \"TalkBack enables any device to act on queued commands. For example, if you have a door that is outfitted with Wi-Fi and a motion sensor, you can queue up commands to open and close the door. When the door senses someone nearby, open the door. After a specified time, close the door. If there are no more commands in the queue, the door does not open when the next person approaches.\",\n    \"table\": {\n    \"id\": \"#\",\n    \"name\": \"Name\",\n    \"created\": \"Created\",\n    \"actions\": \"Actions\"\n    }\n    },\n    \"fr\": {\n    \"main-title\": \"Mes Actions\",\n    \"no-trigger\": \"Aucune Action à Afficher\",\n    \"add-trigger\": \"Nouveau Action\",\n    \"help\": \"Aide\",\n    \"text\": \"TalkBack permet à tout appareil d'agir sur les commandes en file d'attente. Par exemple, si une porte est équipée du Wi-Fi et d'un détecteur de mouvement, vous pouvez mettre en file d'attente les commandes permettant d'ouvrir et de fermer la porte. Lorsque la porte détecte quelqu'un à proximité, ouvrez-la. Après un temps spécifié, fermez la porte. S'il n'y a plus de commandes dans la file d'attente, la porte ne s'ouvre pas à l'approche de la personne suivante. \",\n    \"table\": {\n    \"id\": \"#\",\n    \"name\": \"Nom\",\n    \"created\": \"Créé\",\n    \"actions\": \"Actions\"\n    }\n    }\n    }\n</i18n>\n"],"sourceRoot":"src/views"}]}