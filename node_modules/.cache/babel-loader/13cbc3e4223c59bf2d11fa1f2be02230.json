{"remainingRequest":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/babel-loader/lib/index.js!/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/src/components/SignIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/src/components/SignIn.vue","mtime":1555420370175},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/clokbani/DevWeb/Iot-Project/ayoub/iot-platform/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Form from \"@/components/Form\";\nimport { required } from 'vuelidate/lib/validators';\nimport { mapActions } from 'vuex';\nexport default {\n  name: \"SignIn\",\n  components: {\n    'generic-form': Form\n  },\n  data: function data() {\n    return {\n      component: 'sign-in',\n      selected: 1,\n      username: '',\n      password: ''\n    };\n  },\n  methods: _objectSpread({}, mapActions(['switchProgress', 'postRequest']), {\n    login: function login() {\n      var _this = this;\n\n      var postData = {\n        userName: this.username,\n        password: this.password\n      };\n      var payload = {\n        'data': postData,\n        'link': '/login'\n      };\n      this.postRequest(payload).then(function (request) {\n        return _this.loginSuccessful(request);\n      }).catch(function () {\n        _this.flash('Login Failed !', 'error');\n      });\n    },\n    loginSuccessful: function loginSuccessful(req) {\n      var _this2 = this;\n\n      if (req.headers) {\n        this.$store.dispatch('saveUserToken', req.headers.authorization);\n        this.$http.get('http://localhost:8091/id', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + this.$store.state.token\n          }\n        }).then(function (request) {\n          return _this2.$store.dispatch('saveUserId', request.data);\n        });\n        this.switchProgress();\n        setTimeout(function () {\n          _this2.switchProgress();\n\n          _this2.$router.push('/dashboard');\n        }, 2000);\n        return false;\n      }\n    }\n  }),\n  validations: {\n    username: {\n      required: required\n    },\n    password: {\n      required: required\n    }\n  }\n};",{"version":3,"sources":["SignIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,OAAA,IAAA,MAAA,mBAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,UAAA,EAAA;AACA,oBAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,SADA;AAEA,MAAA,QAAA,EAAA,CAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GAZA;AAaA,EAAA,OAAA,oBACA,UAAA,CAAA,CACA,gBADA,EAEA,aAFA,CAAA,CADA;AAKA,IAAA,KALA,mBAKA;AAAA;;AACA,UAAA,QAAA,GAAA;AACA,QAAA,QAAA,EAAA,KAAA,QADA;AAEA,QAAA,QAAA,EAAA,KAAA;AAFA,OAAA;AAIA,UAAA,OAAA,GAAA;AACA,gBAAA,QADA;AAEA,gBAAA;AAFA,OAAA;AAIA,WAAA,WAAA,CAAA,OAAA,EAAA,IAAA,CAAA,UAAA,OAAA;AAAA,eAAA,KAAA,CAAA,eAAA,CAAA,OAAA,CAAA;AAAA,OAAA,EACA,KADA,CACA,YAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,OAAA;AACA,OAHA;AAIA,KAlBA;AAmBA,IAAA,eAnBA,2BAmBA,GAnBA,EAmBA;AAAA;;AACA,UAAA,GAAA,CAAA,OAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,GAAA,CAAA,OAAA,CAAA,aAAA;AACA,aAAA,KAAA,CAAA,GAAA,CAAA,0BAAA,EAAA;AACA,UAAA,OAAA,EAAA;AACA,4BAAA,kBADA;AAEA,6BAAA,YAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AAFA;AADA,SAAA,EAMA,IANA,CAMA,UAAA,OAAA;AAAA,iBAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,OAAA,CAAA,IAAA,CAAA;AAAA,SANA;AAOA,aAAA,cAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,cAAA;;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,YAAA;AACA,SAHA,EAGA,IAHA,CAAA;AAIA,eAAA,KAAA;AACA;AACA;AApCA,IAbA;AAmDA,EAAA,WAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KADA;AAIA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA;AAJA;AAnDA,CAAA","sourcesContent":["<template>\n    <div id=\"sign-in\" class=\"col s12\">\n        <form class=\"col s12\"  @submit.prevent=\"login\">\n            <div class=\"form-container\">\n                <h4>{{ $t('auth.welcome') }}</h4>\n                <generic-form>\n                    <div slot=\"form-fields\">\n                        <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                                <input\n                                        id=\"username\"\n                                        type=\"text\"\n                                        class=\"validate\"\n                                        required\n                                        v-model=\"username\"\n                                        @input=\"$v.username.$touch()\">\n                                <label for=\"username\">{{ $t('auth.username') }}</label>\n                                <div v-if=\"$v.username.$dirty\">\n                                    <p class=\"error-message red-text \" v-if=\"!$v.username.required\">\n                                        {{ $t('errors.required') }}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                                <input\n                                        id=\"password\"\n                                        type=\"password\"\n                                        class=\"validate\"\n                                        required\n                                        v-model=\"password\"\n                                        @input=\"$v.password.$touch()\">\n                                <label for=\"password\">{{ $t('auth.password') }}</label>\n                                <div v-if=\"$v.password.$dirty\">\n                                    <p class=\"error-message red-text \" v-if=\"!$v.password.required\">\n                                        {{ $t('errors.required') }}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div slot=\"form-controls\">\n                        <center>\n                            <button class=\"btn waves-effect waves-light  submit\" type=\"submit\" name=\"action\">{{ $t('auth.sign-in') }}</button>\n                        </center>\n                    </div>\n                </generic-form>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n    import Form from \"@/components/Form\";\n    import { required } from 'vuelidate/lib/validators'\n    import {  mapActions } from 'vuex';\n\n    export default {\n        name: \"SignIn\",\n        components: {\n            'generic-form': Form\n        },\n        data() {\n            return {\n                component: 'sign-in',\n                selected: 1,\n                username: '',\n                password: '',\n            }\n        },\n        methods: {\n            ...mapActions([\n                'switchProgress',\n                'postRequest'\n            ]),\n            login() {\n                var postData = {\n                    userName: this.username,\n                    password: this.password\n                };\n                var payload = {\n                    'data': postData,\n                    'link': '/login'\n                };\n                this.postRequest(payload).then(request => this.loginSuccessful(request))\n                    .catch( ()=> {\n                        this.flash('Login Failed !', 'error')\n                    })\n            },\n            loginSuccessful(req) {\n                if (req.headers) {\n                    this.$store.dispatch('saveUserToken', req.headers.authorization);\n                    this.$http.get( 'http://localhost:8091/id',{\n                            headers:{\n                                'Content-Type': 'application/json',\n                                'Authorization': 'Bearer '+ this.$store.state.token\n                            }\n                        }\n                    ).then(request=>this.$store.dispatch('saveUserId', request.data))\n                    this.switchProgress();\n                    setTimeout(() => {\n                        this.switchProgress();\n                        this.$router.push('/dashboard');\n                    },2000);\n                    return false;\n                }\n            },\n        },\n        validations: {\n            username: {\n                required,\n            },\n            password: {\n                required,\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}